/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/_dashboard'
import { Route as DashboardIndexImport } from './routes/_dashboard/index'
import { Route as DashboardAccountImport } from './routes/_dashboard/account'

// Create Virtual Routes

const SignLazyImport = createFileRoute('/sign')()

// Create/Update Routes

const SignLazyRoute = SignLazyImport.update({
  path: '/sign',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/sign.lazy').then((d) => d.Route))

const DashboardRoute = DashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardAccountRoute = DashboardAccountImport.update({
  path: '/account',
  getParentRoute: () => DashboardRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_dashboard': {
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/sign': {
      preLoaderRoute: typeof SignLazyImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard/account': {
      preLoaderRoute: typeof DashboardAccountImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/': {
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  DashboardRoute.addChildren([DashboardAccountRoute, DashboardIndexRoute]),
  SignLazyRoute,
])

/* prettier-ignore-end */
