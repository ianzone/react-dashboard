/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root';
import { Route as DashboardImport } from './routes/_dashboard';
import { Route as DashboardAccountImport } from './routes/_dashboard/account';
import { Route as DashboardIndexImport } from './routes/_dashboard/index';
import { Route as SignImport } from './routes/_sign';
import { Route as SignForgotpassImport } from './routes/_sign/forgotpass';
import { Route as SignSigninImport } from './routes/_sign/signin';
import { Route as SignSignupImport } from './routes/_sign/signup';

// Create/Update Routes

const SignRoute = SignImport.update({
  id: '/_sign',
  getParentRoute: () => rootRoute,
} as any);

const DashboardRoute = DashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any);

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any);

const SignSignupRoute = SignSignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => SignRoute,
} as any);

const SignSigninRoute = SignSigninImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => SignRoute,
} as any);

const SignForgotpassRoute = SignForgotpassImport.update({
  id: '/forgotpass',
  path: '/forgotpass',
  getParentRoute: () => SignRoute,
} as any);

const DashboardAccountRoute = DashboardAccountImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => DashboardRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_dashboard': {
      id: '/_dashboard';
      path: '';
      fullPath: '';
      preLoaderRoute: typeof DashboardImport;
      parentRoute: typeof rootRoute;
    };
    '/_sign': {
      id: '/_sign';
      path: '';
      fullPath: '';
      preLoaderRoute: typeof SignImport;
      parentRoute: typeof rootRoute;
    };
    '/_dashboard/account': {
      id: '/_dashboard/account';
      path: '/account';
      fullPath: '/account';
      preLoaderRoute: typeof DashboardAccountImport;
      parentRoute: typeof DashboardImport;
    };
    '/_sign/forgotpass': {
      id: '/_sign/forgotpass';
      path: '/forgotpass';
      fullPath: '/forgotpass';
      preLoaderRoute: typeof SignForgotpassImport;
      parentRoute: typeof SignImport;
    };
    '/_sign/signin': {
      id: '/_sign/signin';
      path: '/signin';
      fullPath: '/signin';
      preLoaderRoute: typeof SignSigninImport;
      parentRoute: typeof SignImport;
    };
    '/_sign/signup': {
      id: '/_sign/signup';
      path: '/signup';
      fullPath: '/signup';
      preLoaderRoute: typeof SignSignupImport;
      parentRoute: typeof SignImport;
    };
    '/_dashboard/': {
      id: '/_dashboard/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof DashboardIndexImport;
      parentRoute: typeof DashboardImport;
    };
  }
}

// Create and export the route tree

interface DashboardRouteChildren {
  DashboardAccountRoute: typeof DashboardAccountRoute;
  DashboardIndexRoute: typeof DashboardIndexRoute;
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardAccountRoute: DashboardAccountRoute,
  DashboardIndexRoute: DashboardIndexRoute,
};

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(DashboardRouteChildren);

interface SignRouteChildren {
  SignForgotpassRoute: typeof SignForgotpassRoute;
  SignSigninRoute: typeof SignSigninRoute;
  SignSignupRoute: typeof SignSignupRoute;
}

const SignRouteChildren: SignRouteChildren = {
  SignForgotpassRoute: SignForgotpassRoute,
  SignSigninRoute: SignSigninRoute,
  SignSignupRoute: SignSignupRoute,
};

const SignRouteWithChildren = SignRoute._addFileChildren(SignRouteChildren);

export interface FileRoutesByFullPath {
  '': typeof SignRouteWithChildren;
  '/account': typeof DashboardAccountRoute;
  '/forgotpass': typeof SignForgotpassRoute;
  '/signin': typeof SignSigninRoute;
  '/signup': typeof SignSignupRoute;
  '/': typeof DashboardIndexRoute;
}

export interface FileRoutesByTo {
  '': typeof SignRouteWithChildren;
  '/account': typeof DashboardAccountRoute;
  '/forgotpass': typeof SignForgotpassRoute;
  '/signin': typeof SignSigninRoute;
  '/signup': typeof SignSignupRoute;
  '/': typeof DashboardIndexRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  '/_dashboard': typeof DashboardRouteWithChildren;
  '/_sign': typeof SignRouteWithChildren;
  '/_dashboard/account': typeof DashboardAccountRoute;
  '/_sign/forgotpass': typeof SignForgotpassRoute;
  '/_sign/signin': typeof SignSigninRoute;
  '/_sign/signup': typeof SignSignupRoute;
  '/_dashboard/': typeof DashboardIndexRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: '' | '/account' | '/forgotpass' | '/signin' | '/signup' | '/';
  fileRoutesByTo: FileRoutesByTo;
  to: '' | '/account' | '/forgotpass' | '/signin' | '/signup' | '/';
  id:
    | '__root__'
    | '/_dashboard'
    | '/_sign'
    | '/_dashboard/account'
    | '/_sign/forgotpass'
    | '/_sign/signin'
    | '/_sign/signup'
    | '/_dashboard/';
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  DashboardRoute: typeof DashboardRouteWithChildren;
  SignRoute: typeof SignRouteWithChildren;
}

const rootRouteChildren: RootRouteChildren = {
  DashboardRoute: DashboardRouteWithChildren,
  SignRoute: SignRouteWithChildren,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_dashboard",
        "/_sign"
      ]
    },
    "/_dashboard": {
      "filePath": "_dashboard.tsx",
      "children": [
        "/_dashboard/account",
        "/_dashboard/"
      ]
    },
    "/_sign": {
      "filePath": "_sign.tsx",
      "children": [
        "/_sign/forgotpass",
        "/_sign/signin",
        "/_sign/signup"
      ]
    },
    "/_dashboard/account": {
      "filePath": "_dashboard/account.tsx",
      "parent": "/_dashboard"
    },
    "/_sign/forgotpass": {
      "filePath": "_sign/forgotpass.tsx",
      "parent": "/_sign"
    },
    "/_sign/signin": {
      "filePath": "_sign/signin.tsx",
      "parent": "/_sign"
    },
    "/_sign/signup": {
      "filePath": "_sign/signup.tsx",
      "parent": "/_sign"
    },
    "/_dashboard/": {
      "filePath": "_dashboard/index.tsx",
      "parent": "/_dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
